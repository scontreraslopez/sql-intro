1
00:00:00,400 --> 00:00:02,940
Los desarrolladores senior más sabios son los primeros en

2
00:00:02,940 --> 00:00:06,960
admitir que su base de código es un montón en llamas

3
00:00:06,960 --> 00:00:11,320
de basura llena de errores que de alguna manera ha sobrevivido

4
00:00:11,320 --> 00:00:12,900
en producción tanto tiempo.

5
00:00:13,020 --> 00:00:14,960
Entonces, porque tú y tu equipo están siempre

6
00:00:14,960 --> 00:00:17,780
a solo un mal commit de borrar

7
00:00:17,780 --> 00:00:19,860
todos los datos de sus clientes, no piensas

8
00:00:19,860 --> 00:00:21,360
que sería inteligente hacer una copia de seguridad de tus

9
00:00:21,360 --> 00:00:21,840
bases de datos? 

10
00:00:22,100 --> 00:00:23,720
Así que, hablemos de cómo realmente

11
00:00:23,720 --> 00:00:25,500
configurar copias de seguridad de bases de datos.

12
00:00:25,840 --> 00:00:27,780
O cómo funcionan, probablemente sería una forma más

13
00:00:27,780 --> 00:00:28,680
precisa de expresarlo.

14
00:00:29,080 --> 00:00:32,440
Entonces, aquí tenemos nuestra base de datos de producción.

15
00:00:34,120 --> 00:00:34,300
¿Verdad?

16
00:00:34,380 --> 00:00:36,960
Y cada día, se están añadiendo nuevos datos

17
00:00:36,960 --> 00:00:38,320
a la base de datos de producción.

18
00:00:38,580 --> 00:00:40,420
Y así, naturalmente, estamos preocupados, ¿verdad?

19
00:00:40,420 --> 00:00:42,320
Queremos asegurarnos de que incluso si

20
00:00:42,320 --> 00:00:45,100
algo catastrófico sucede, si esta base de datos se elimina,

21
00:00:45,240 --> 00:00:47,260
si se envía un código defectuoso que borra

22
00:00:47,260 --> 00:00:48,480
todas las filas en la base de datos,

23
00:00:48,720 --> 00:00:48,920
¿verdad?

24
00:00:48,920 --> 00:00:50,660
Que tengamos una forma de restaurar la

25
00:00:50,660 --> 00:00:50,940
base de datos.

26
00:00:50,940 --> 00:00:54,520
Así que, una estrategia muy común es simplemente

27
00:00:54,520 --> 00:00:58,220
hacer una especie de instantánea de la base de datos, digamos diariamente.

28
00:00:59,060 --> 00:01:01,420
Muchas de las empresas donde he trabajado simplemente

29
00:01:01,420 --> 00:01:02,860
hacen instantáneas diarias.

30
00:01:03,400 --> 00:01:07,200
Así que, por ejemplo, cada día a medianoche, una

31
00:01:07,200 --> 00:01:08,880
tarea automatizada se ejecuta, ¿verdad?

32
00:01:08,920 --> 00:01:12,020
Hay un código ejecutándose en el servidor que

33
00:01:12,020 --> 00:01:13,780
copia todos los datos de la

34
00:01:13,780 --> 00:01:18,040
base de datos de producción y los coloca en una instantánea para el

35
00:01:18,040 --> 00:01:18,240
día.

36
00:01:18,780 --> 00:01:24,260
Entonces, diríamos, base de datos, copia, sabes,

37
00:01:24,340 --> 00:01:25,760
1 de mayo de 2023.

38
00:01:27,100 --> 00:01:28,140
Algo así.

39
00:01:29,140 --> 00:01:33,800
Y esos datos van a vivir en

40
00:01:33,800 --> 00:01:35,080
almacenamiento en frío en algún lugar.

41
00:01:35,180 --> 00:01:36,160
Va a ser muy barato.

42
00:01:36,580 --> 00:01:38,640
Vamos a meterlo en un sistema de archivos plano.

43
00:01:38,640 --> 00:01:39,360
No necesitamos poder acceder

44
00:01:39,360 --> 00:01:43,500
a estos datos de manera directa desde nuestra aplicación,

45
00:01:43,940 --> 00:01:44,200
¿verdad?

46
00:01:44,340 --> 00:01:46,640
Así que, tecnológicamente hablando, esto podría estar

47
00:01:46,640 --> 00:01:50,000
en algo como un bucket de Amazon S3 o

48
00:01:50,000 --> 00:01:53,920
un bucket de Google Cloud Storage.

49
00:01:54,500 --> 00:01:55,700
Es un almacenamiento muy barato.

50
00:01:56,200 --> 00:01:59,680
La idea es que, si algo sale mal, podemos

51
00:01:59,680 --> 00:02:02,860
siempre restaurar desde esta copia de seguridad

52
00:02:02,860 --> 00:02:05,940
de vuelta a nuestra base de datos de producción, ¿verdad?

53
00:02:06,560 --> 00:02:07,520
No se está utilizando en vivo.

54
00:02:07,520 --> 00:02:08,660
Es solo una copia de seguridad.

55
00:02:09,220 --> 00:02:11,060
Y luego, por supuesto, al día siguiente, tomaríamos...

56
00:02:11,060 --> 00:02:11,940
Déjame cambiar los colores nuevamente.

57
00:02:15,000 --> 00:02:16,940
Al día siguiente, tomaríamos una nueva

58
00:02:16,940 --> 00:02:26,770
instantánea y la nombraríamos copia de la base de datos de producción

59
00:02:26,770 --> 00:02:30,150
2 de mayo de 2023, ¿verdad?

60
00:02:30,250 --> 00:02:30,930
Entiendes la idea.

61
00:02:31,050 --> 00:02:32,690
Estamos tomando instantáneas diariamente.

62
00:02:32,910 --> 00:02:35,710
Y luego, generalmente, lo que ocurriría es que solo

63
00:02:35,710 --> 00:02:37,890
mantendríamos las instantáneas durante una cierta cantidad

64
00:02:37,890 --> 00:02:38,670
de tiempo, ¿verdad?

65
00:02:38,690 --> 00:02:40,590
Así que, podríamos tomar una instantánea cada día,

66
00:02:40,590 --> 00:02:42,530
pero solo mantenerlas alrededor por un mes.

67
00:02:43,090 --> 00:02:44,610
Entonces, una vez que tenemos un mes de

68
00:02:44,610 --> 00:02:47,690
instantáneas, comenzamos a eliminar las viejas instantáneas solo

69
00:02:47,690 --> 00:02:49,390
para no tener que almacenar todos

70
00:02:49,390 --> 00:02:51,530
esos datos para siempre, porque eso podría comenzar a

71
00:02:51,530 --> 00:02:52,010
ser costoso.

72
00:02:52,230 --> 00:02:53,650
Ahora, puede que ya hayas notado que hay un

73
00:02:53,650 --> 00:02:54,610
problema aquí, ¿verdad?

74
00:02:54,630 --> 00:02:56,610
Si solo estamos tomando una instantánea cada día,

75
00:02:57,050 --> 00:02:59,890
eso significa que tomamos nuestra instantánea, más

76
00:02:59,890 --> 00:03:02,170
datos se añaden a la base de datos, y luego

77
00:03:02,170 --> 00:03:03,370
algo malo sucede.

78
00:03:03,370 --> 00:03:06,710
Si restauramos desde esa última instantánea, en realidad

79
00:03:06,710 --> 00:03:08,770
perderemos todo lo que ocurrió en las

80
00:03:08,770 --> 00:03:11,750
últimas cinco o seis horas desde que se tomó esa instantánea.

81
00:03:11,750 --> 00:03:12,210
 

82
00:03:12,530 --> 00:03:15,270
Así que, la manera simple de solucionar esto o

83
00:03:15,270 --> 00:03:17,590
mitigar esto sería, en lugar de

84
00:03:17,590 --> 00:03:20,490
hacer instantáneas diarias, podrías hacer instantáneas horarias,

85
00:03:20,670 --> 00:03:20,870
¿verdad?

86
00:03:21,070 --> 00:03:22,990
Todavía tienes el mismo problema, pero ahora

87
00:03:22,990 --> 00:03:24,090
lo tienes a una escala más pequeña.

88
00:03:24,190 --> 00:03:27,010
Nunca perderás más de, digamos, 59 minutos

89
00:03:27,010 --> 00:03:27,670
de datos.

90
00:03:27,850 --> 00:03:29,710
Ahora, vale la pena señalar que para la mayoría

91
00:03:29,710 --> 00:03:34,250
de las pequeñas empresas, este método de instantáneas cada hora o

92
00:03:34,250 --> 00:03:37,710
diariamente está bien, ¿verdad?

93
00:03:38,070 --> 00:03:40,670
Con suerte no perderás tu base de datos de producción de todos modos,

94
00:03:40,950 --> 00:03:42,350
pero si lo haces, solo perderás

95
00:03:42,350 --> 00:03:43,690
un par de horas de datos.

96
00:03:43,790 --> 00:03:45,390
Probablemente no sea crítico para la misión.

97
00:03:45,570 --> 00:03:48,050
Tu negocio probablemente no se irá a la quiebra,

98
00:03:48,410 --> 00:03:48,670
¿verdad?

99
00:03:48,810 --> 00:03:51,170
Y esto es algo muy simple de

100
00:03:51,170 --> 00:03:51,830
configurar, ¿verdad?

101
00:03:51,870 --> 00:03:54,950
La mayoría de los proveedores de bases de datos en la nube, cosas como Amazon

102
00:03:54,950 --> 00:03:58,210
RDS o Google Cloud SQL, tienen literalmente solo

103
00:03:58,210 --> 00:04:00,030
un botón que puedes presionar para configurar

104
00:04:00,030 --> 00:04:01,230
instantáneas automáticas.

105
00:04:01,370 --> 00:04:03,030
Así que, si trabajas en una pequeña empresa

106
00:04:03,030 --> 00:04:05,310
o en un pequeño proyecto, las instantáneas son probablemente

107
00:04:05,310 --> 00:04:05,890
el camino a seguir.

108
00:04:05,990 --> 00:04:07,650
Hablemos de una opción un poco más robusta.

109
00:04:07,650 --> 00:04:08,090
 

110
00:04:08,190 --> 00:04:10,350
Digamos que no puedes permitirte perder ningún dato.

111
00:04:10,910 --> 00:04:14,150
Lo que podrías hacer en ese caso es,

112
00:04:14,230 --> 00:04:16,410
quiero decir, aún tendrías tu base de datos de producción.

113
00:04:16,610 --> 00:04:18,310
Déjame hacer esto un poco más grande.

114
00:04:19,410 --> 00:04:21,610
Aún tendrías tu base de datos de producción, pero ahora

115
00:04:21,610 --> 00:04:24,830
en lugar de hacer instantáneas horarias o diarias, lo que

116
00:04:24,830 --> 00:04:28,850
podrías hacer es, cada vez que se realice un cambio

117
00:04:28,850 --> 00:04:32,050
en la base de datos de producción, podrías establecer

118
00:04:32,050 --> 00:04:34,490
un sistema donde ese cambio se copie

119
00:04:34,490 --> 00:04:40,090
a algún registro de solo adición.

120
00:04:40,390 --> 00:04:44,010
Registro de solo adición, ¿verdad?

121
00:04:44,230 --> 00:04:47,850
Así que, por ejemplo, si creas un registro

122
00:04:47,850 --> 00:04:52,090
aquí, también registrarías, en el registro de solo

123
00:04:52,090 --> 00:04:55,850
adición, el hecho de que creaste el

124
00:04:55,850 --> 00:04:56,090
registro.

125
00:04:57,950 --> 00:05:03,010
De manera similar, si luego eliminas un registro, ten en cuenta que, cuando eliminas un registro en

126
00:05:03,010 --> 00:05:04,570
la base de datos de producción, simplemente desaparece.

127
00:05:04,570 --> 00:05:06,270
¡Puf! ¿verdad?

128
00:05:06,490 --> 00:05:07,390
 

129
00:05:07,510 --> 00:05:09,610
Pero en el registro de solo adición, solo

130
00:05:09,610 --> 00:05:11,790
registrarías que eliminaste un registro.

131
00:05:12,110 --> 00:05:15,750
Así que, registrar que el registro fue eliminado.

132
00:05:16,750 --> 00:05:19,690
La diferencia es que, en el registro de solo adición,

133
00:05:20,470 --> 00:05:26,510
¿verdad? Todavía tenemos el registro de la

134
00:05:26,510 --> 00:05:27,410
creación del registro.

135
00:05:27,550 --> 00:05:29,210
Así que podríamos volver y

136
00:05:29,210 --> 00:05:32,870
reproducir ese evento de creación de registro si necesitamos

137
00:05:32,870 --> 00:05:33,050
hacerlo.

138
00:05:33,410 --> 00:05:35,830
Así que, este tipo de sistema es, francamente,

139
00:05:36,030 --> 00:05:37,690
un poco más complejo de configurar, un

140
00:05:37,690 --> 00:05:40,730
poco más costoso de configurar, pero puede

141
00:05:40,730 --> 00:05:43,150
darnos un poco más de granularidad y robustez

142
00:05:43,150 --> 00:05:45,430
en el sentido de que nunca perderemos

143
00:05:45,430 --> 00:05:47,170
datos en tiempo real.

144
00:05:47,470 --> 00:05:49,050
Y quiero reiterar rápidamente el

145
00:05:49,050 --> 00:05:51,970
hecho de que para la mayoría de las empresas, especialmente las empresas más pequeñas,

146
00:05:52,310 --> 00:05:55,370
la actualización de instantáneas funciona muy bien, y solo

147
00:05:55,370 --> 00:05:57,690
te aventurarías en esta configuración más compleja

148
00:05:57,690 --> 00:05:59,190
si realmente lo necesitas.